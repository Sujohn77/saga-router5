{"version":3,"sources":["webpack:///./node_modules/@formatjs/intl-pluralrules/index.js","webpack:///./node_modules/@formatjs/intl-pluralrules/polyfill.js"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,8EAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6BAA6B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;ACtMa;AACb,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8DAAI;AACrB;AACA,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL","file":"polyfillIntlPlurals.bundle.js","sourcesContent":["\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar intl_utils_1 = require(\"@formatjs/intl-utils\");\nfunction validateInstance(instance, method) {\n    if (!(instance instanceof PluralRules)) {\n        throw new TypeError(\"Method Intl.PluralRules.prototype.\" + method + \" called on incompatible receiver \" + String(instance));\n    }\n}\n/**\n * https://tc39.es/ecma402/#sec-torawprecision\n * @param x\n * @param minPrecision\n * @param maxPrecision\n */\nfunction toRawPrecision(x, minPrecision, maxPrecision) {\n    var m = x.toPrecision(maxPrecision);\n    if (~m.indexOf('.') && maxPrecision > minPrecision) {\n        var cut = maxPrecision - minPrecision;\n        while (cut > 0 && m[m.length - 1] === '0') {\n            m = m.slice(0, m.length - 1);\n            cut--;\n        }\n        if (m[m.length - 1] === '.') {\n            return m.slice(0, m.length - 1);\n        }\n    }\n    return m;\n}\n/**\n * https://tc39.es/ecma402/#sec-torawfixed\n * @param x\n * @param minInteger\n * @param minFraction\n * @param maxFraction\n */\nfunction toRawFixed(x, minInteger, minFraction, maxFraction) {\n    var cut = maxFraction - minFraction;\n    var m = x.toFixed(maxFraction);\n    while (cut > 0 && m[m.length - 1] === '0') {\n        m = m.slice(0, m.length - 1);\n        cut--;\n    }\n    if (m[m.length - 1] === '.') {\n        m = m.slice(0, m.length - 1);\n    }\n    var int = m.split('.')[0].length;\n    if (int < minInteger) {\n        var z = '';\n        for (; z.length < minInteger - int; z += '0')\n            ;\n        m = z + m;\n    }\n    return m;\n}\nfunction formatNumericToString(internalSlotMap, pl, x) {\n    var minimumSignificantDigits = intl_utils_1.getInternalSlot(internalSlotMap, pl, 'minimumSignificantDigits');\n    var maximumSignificantDigits = intl_utils_1.getInternalSlot(internalSlotMap, pl, 'maximumSignificantDigits');\n    if (minimumSignificantDigits !== undefined &&\n        maximumSignificantDigits !== undefined) {\n        return toRawPrecision(x, minimumSignificantDigits, maximumSignificantDigits);\n    }\n    return toRawFixed(x, intl_utils_1.getInternalSlot(internalSlotMap, pl, 'minimumIntegerDigits'), intl_utils_1.getInternalSlot(internalSlotMap, pl, 'minimumFractionDigits'), intl_utils_1.getInternalSlot(internalSlotMap, pl, 'maximumFractionDigits'));\n}\nvar PluralRules = /** @class */ (function () {\n    function PluralRules(locales, options) {\n        // test262/test/intl402/RelativeTimeFormat/constructor/constructor/newtarget-undefined.js\n        // Cannot use `new.target` bc of IE11 & TS transpiles it to something else\n        var newTarget = this && this instanceof PluralRules ? this.constructor : void 0;\n        if (!newTarget) {\n            throw new TypeError(\"Intl.PluralRules must be called with 'new'\");\n        }\n        var requestedLocales = Intl\n            .getCanonicalLocales(locales);\n        var opt = Object.create(null);\n        var opts = options === undefined ? Object.create(null) : intl_utils_1.toObject(options);\n        intl_utils_1.setInternalSlot(PluralRules.__INTERNAL_SLOT_MAP__, this, 'initializedPluralRules', true);\n        var matcher = intl_utils_1.getOption(opts, 'localeMatcher', 'string', ['best fit', 'lookup'], 'best fit');\n        opt.localeMatcher = matcher;\n        intl_utils_1.setInternalSlot(PluralRules.__INTERNAL_SLOT_MAP__, this, 'type', intl_utils_1.getOption(opts, 'type', 'string', ['cardinal', 'ordinal'], 'cardinal'));\n        intl_utils_1.setNumberFormatDigitOptions(PluralRules.__INTERNAL_SLOT_MAP__.get(this), opts, 0, 3, 'standard');\n        var r = intl_utils_1.createResolveLocale(PluralRules.getDefaultLocale)(PluralRules.availableLocales, requestedLocales, opt, PluralRules.relevantExtensionKeys, PluralRules.localeData);\n        intl_utils_1.setInternalSlot(PluralRules.__INTERNAL_SLOT_MAP__, this, 'locale', r.locale);\n    }\n    PluralRules.prototype.resolvedOptions = function () {\n        var _this = this;\n        validateInstance(this, 'resolvedOptions');\n        var opts = Object.create(null);\n        opts.locale = intl_utils_1.getInternalSlot(PluralRules.__INTERNAL_SLOT_MAP__, this, 'locale');\n        opts.type = intl_utils_1.getInternalSlot(PluralRules.__INTERNAL_SLOT_MAP__, this, 'type');\n        [\n            'minimumIntegerDigits',\n            'minimumFractionDigits',\n            'maximumFractionDigits',\n            'minimumSignificantDigits',\n            'maximumSignificantDigits',\n        ].forEach(function (field) {\n            var val = intl_utils_1.getInternalSlot(PluralRules.__INTERNAL_SLOT_MAP__, _this, field);\n            if (val !== undefined) {\n                opts[field] = val;\n            }\n        });\n        opts.pluralCategories = __spreadArrays(PluralRules.localeData[opts.locale].categories[opts.type]);\n        return opts;\n    };\n    PluralRules.prototype.select = function (val) {\n        validateInstance(this, 'select');\n        var locale = intl_utils_1.getInternalSlot(PluralRules.__INTERNAL_SLOT_MAP__, this, 'locale');\n        var type = intl_utils_1.getInternalSlot(PluralRules.__INTERNAL_SLOT_MAP__, this, 'type');\n        return PluralRules.localeData[locale].fn(formatNumericToString(PluralRules.__INTERNAL_SLOT_MAP__, this, Math.abs(Number(val))), type == 'ordinal');\n    };\n    PluralRules.prototype.toString = function () {\n        return '[object Intl.PluralRules]';\n    };\n    PluralRules.supportedLocalesOf = function (locales, options) {\n        return intl_utils_1.supportedLocales(PluralRules.availableLocales, Intl.getCanonicalLocales(locales), options);\n    };\n    PluralRules.__addLocaleData = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        var _loop_1 = function (datum) {\n            var availableLocales = datum.availableLocales;\n            availableLocales.forEach(function (locale) {\n                try {\n                    PluralRules.localeData[locale] = intl_utils_1.unpackData(locale, datum);\n                }\n                catch (e) {\n                    if (intl_utils_1.isMissingLocaleDataError(e)) {\n                        // If we just don't have data for certain locale, that's ok\n                        return;\n                    }\n                    throw e;\n                }\n            });\n        };\n        for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {\n            var datum = data_1[_a];\n            _loop_1(datum);\n        }\n        PluralRules.availableLocales = Object.keys(PluralRules.localeData);\n        if (!PluralRules.__defaultLocale) {\n            PluralRules.__defaultLocale = PluralRules.availableLocales[0];\n        }\n    };\n    PluralRules.getDefaultLocale = function () {\n        return PluralRules.__defaultLocale;\n    };\n    PluralRules.localeData = {};\n    PluralRules.availableLocales = [];\n    PluralRules.__defaultLocale = 'en';\n    PluralRules.relevantExtensionKeys = [];\n    PluralRules.polyfilled = true;\n    PluralRules.__INTERNAL_SLOT_MAP__ = new WeakMap();\n    return PluralRules;\n}());\nexports.PluralRules = PluralRules;\ntry {\n    // IE11 does not have Symbol\n    if (typeof Symbol !== 'undefined') {\n        Object.defineProperty(PluralRules.prototype, Symbol.toStringTag, {\n            value: 'Intl.PluralRules',\n            writable: false,\n            enumerable: false,\n            configurable: true,\n        });\n    }\n    // https://github.com/tc39/test262/blob/master/test/intl402/PluralRules/length.js\n    Object.defineProperty(PluralRules, 'length', {\n        value: 0,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n    // https://github.com/tc39/test262/blob/master/test/intl402/RelativeTimeFormat/constructor/length.js\n    Object.defineProperty(PluralRules.prototype.constructor, 'length', {\n        value: 0,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n    // https://github.com/tc39/test262/blob/master/test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/length.js\n    Object.defineProperty(PluralRules.supportedLocalesOf, 'length', {\n        value: 1,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n}\ncatch (ex) {\n    // Meta fixes for test262\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\"./\");\nif (!('PluralRules' in Intl) ||\n    new Intl.PluralRules('en', { minimumFractionDigits: 2 }).select(1) ===\n        'one') {\n    Object.defineProperty(Intl, 'PluralRules', {\n        value: _1.PluralRules,\n        writable: true,\n        enumerable: false,\n        configurable: true,\n    });\n}\n"],"sourceRoot":""}